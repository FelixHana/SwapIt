<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.place.mapper.ResponseMapper">

    <insert id="add">
        insert into response(user_response, request_id, response_title, response_detail, response_file, schedule_date, create_time, update_time, cost)
        values (#{userResponse}, #{requestId}, #{responseTitle}, #{responseDetail}, #{responseFile}, #{scheduleDate}, #{createTime}, #{updateTime}, #{cost})
    </insert>
    <update id="confirm">
        update response
        <set>
            response_state = 1
        </set>
        where id = #{id};
        update response
        <set>
            response_state = 2
        </set>
        where request_id = #{requestId} and response_state = 0

    </update>
    <update id="edit">
        update response
        <set>
            response_title = #{responseTitle},
            <if test="responseDetail != null and responseDetail != ''">
                response_detail = #{responseDetail},
            </if>
            <if test="responseFile != null and responseFile != ''">
                response_file = #{responseFile},
            </if>
            <if test="scheduleDate != null">
                schedule_date = #{scheduleDate},
            </if>
            <if test="cost != null and cost != ''">
                cost = #{cost},
            </if>
            update_time = #{updateTime},
        </set>
        where id = #{id}
    </update>
    <delete id="delete">
        delete from response where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <select id="page" resultType="com.place.domain.po.Response">
        select * from response
        <where>
            request_id = #{requestId}
        </where>
        order by create_time desc
    </select>

    <select id="getRequestId" resultType="java.lang.Long">
        select request_id from response
        <where>
            id = #{responseId}
        </where>
    </select>
    <select id="getUsernameById" resultType="java.lang.String">
        select user_response from response
        <where>
            id = #{id}
        </where>
    </select>

    <select id="pageUserRes" resultType="com.place.domain.po.Response">
        select * from response
        <where>
            <if test="role != 1">
                and user_response = #{username}
            </if>

            <if test="responseTitle != null and responseTitle != ''">
                and response_title like concat('%', #{responseTitle}, '%')
            </if>
            <if test="start != null and end != null">
                and schedule_date between #{start} and date_add(#{end}, interval 1 day)
            </if>
        </where>
        order by create_time desc
    </select>
</mapper>